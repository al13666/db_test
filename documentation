Приложение доступно по адресу:
    http://localhost:PORT
    пример: 
    http://127.0.0.1:80


Эндпоинты:
    1./
    Возвращает сообщение о работе сервера.
    Пример ответа:

        {
        "message": "hello from db_test"
        }

    2. /achievements
    GET /achievements
    Возвращает список всех достижений в базе данных.
    Пример ответа:
        [
            {
                "id": 1,
                "name": "achievement_name",
                "points": 10,
                "description": "Description in English",
                "description_rus": "Описание на русском",
                "name_rus": "Название на русском"
            },
            ...
        ]


    POST /achievements
    Добавляет новое достижение в базу данных.
    Тело запроса: JSON-объект с информацией о достижении:

    {
        "name": "<str>",
        "name_rus": "<str>",
        "points": <int>,
        "description": "<str>",
        "description_rus": "<str>"
    }


    Пример запроса:
        GET /achievements -H "Content-Type: application/json" -d '{"name":"cats_concert", "points":20, "description":"performed at a concert with cats", "description_rus":"выступил на концерте с котиками", "name_rus":"концерт с котиками"}'

    Ответ: JSON-список всех достижений после добавления нового.

    3. /user/<string:name_user>
    GET /user/<string:name_user>
    Находит пользователя по имени.

    Пример запроса:
    GET /user/Ivan

    Пример ответа:
        [
            {
                "id": 1,
                "name": "Ivan",
                "language": "ru"
            }
        ]





    4. /relation
    POST /relation
    Добавляет связь между пользователем и достижением.

    Тело запроса: JSON-объект с информацией о достижении:

    {
        "name": "<str>",
        "name_achievement": "<str>",
    }

    Пример запроса:
        GET /relation -H "Content-Type: application/json" -d '{"name":"Man Mansly", "name_achievement":"cats_concert"}'
    

    5. /show_user_achievements/<string:name_user>
    GET /show_user_achievements/<string:name_user>
    Возвращает список достижений конкретного пользователя.

    Пример запроса:
    GET /show_user_achievements/Ivan

    Пример ответа:
        [
            {
                "name": "Ivan",
                "time": "2024-11-01 12:00:00",
                "achievement": "Cleanliness"
            },
            ...
        ]

    7. /statistic/<string:function>
    GET /statistic/<string:function>

    Описание: Получает статистику по различным функциям. Поддерживаемые значения параметра function:
    
    /max_count_achievements
    Возвращает имя пользователя с наибольшим количеством достижений.

    Пример запроса:
    GET /statistic/max_points_achievements

    Пример ответа:
        [
            {
                "name": "Ivan",
                "count_achievements": 5
            }
        ]

    /max_points_achievements
    Возвращает имя пользователя с максимальным количеством очков за достижения.


    Пример ответа:
        [
            {
                "name": "Ivan",
                "points_achievements": 120
            }
        ]

    /max_points_difference
    Возвращает пары пользователей с максимальной разницей в очках за достижения.


    Пример ответа:
        [
            {
                "user1": "Ivan",
                "points_user1": 150,
                "user2": "John",
                "points_user2": 80,
                "difference_points": 70
            }
        ]

    /min_points_difference
    Возвращает пары пользователей с минимальной разницей в очках за достижения.


    Пример ответа:
        [
            {
                "user1": "Ivan",
                "points_user1": 120,
                "user2": "Anna",
                "points_user2": 115,
                "difference_points": 5
            }
        ]
   
        
        
    /got_achievements_7_days_in_row
    Возвращает список пользователей, которые получали достижения 7 дней подряд.


    Пример ответа:
        [
            {
                "name": "Ivan"
            }
        ]

